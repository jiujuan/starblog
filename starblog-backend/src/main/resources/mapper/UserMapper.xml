<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.starblog.mapper.UserMapper">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.starblog.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
        <result column="avatar" property="avatar"/>
        <result column="role" property="role"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 通用列 -->
    <sql id="Base_Column_List">
        id, username, password, nickname, email, avatar, role, status, create_time, update_time
    </sql>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="com.starblog.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (username, password, nickname, email, avatar, role, status, create_time, update_time)
        VALUES (#{username}, #{password}, #{nickname}, #{email}, #{avatar}, #{role}, #{status}, #{createTime}, #{updateTime})
    </insert>

    <!-- 根据ID删除用户 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <!-- 更新用户 -->
    <update id="update" parameterType="com.starblog.entity.User">
        UPDATE user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="email != null">email = #{email},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="role != null">role = #{role},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据ID查询用户 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user WHERE id = #{id}
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user WHERE username = #{username}
    </select>

    <!-- 根据邮箱查询用户 -->
    <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user WHERE email = #{email}
    </select>

    <!-- 根据用户名和密码查询用户 -->
    <select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user 
        WHERE username = #{username} AND password = #{password}
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user
    </select>

    <!-- 根据角色查询用户 -->
    <select id="selectByRole" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user WHERE role = #{role}
    </select>

    <!-- 根据状态查询用户 -->
    <select id="selectByStatus" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user WHERE status = #{status}
    </select>

    <!-- 分页查询用户 -->
    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE user SET status = #{status} WHERE id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE user SET password = #{password} WHERE id = #{id}
    </update>

    <!-- 统计用户总数 -->
    <select id="countAll" resultType="java.lang.Long">
        SELECT COUNT(*) FROM user
    </select>
</mapper>